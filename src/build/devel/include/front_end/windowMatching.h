// Generated by gencpp from file front_end/windowMatching.msg
// DO NOT EDIT!


#ifndef FRONT_END_MESSAGE_WINDOWMATCHING_H
#define FRONT_END_MESSAGE_WINDOWMATCHING_H

#include <ros/service_traits.h>


#include <front_end/windowMatchingRequest.h>
#include <front_end/windowMatchingResponse.h>


namespace front_end
{

struct windowMatching
{

typedef windowMatchingRequest Request;
typedef windowMatchingResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct windowMatching
} // namespace front_end


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::front_end::windowMatching > {
  static const char* value()
  {
    return "470c2089accb6822fcb69d05c9fefb39";
  }

  static const char* value(const ::front_end::windowMatching&) { return value(); }
};

template<>
struct DataType< ::front_end::windowMatching > {
  static const char* value()
  {
    return "front_end/windowMatching";
  }

  static const char* value(const ::front_end::windowMatching&) { return value(); }
};


// service_traits::MD5Sum< ::front_end::windowMatchingRequest> should match 
// service_traits::MD5Sum< ::front_end::windowMatching > 
template<>
struct MD5Sum< ::front_end::windowMatchingRequest>
{
  static const char* value()
  {
    return MD5Sum< ::front_end::windowMatching >::value();
  }
  static const char* value(const ::front_end::windowMatchingRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::front_end::windowMatchingRequest> should match 
// service_traits::DataType< ::front_end::windowMatching > 
template<>
struct DataType< ::front_end::windowMatchingRequest>
{
  static const char* value()
  {
    return DataType< ::front_end::windowMatching >::value();
  }
  static const char* value(const ::front_end::windowMatchingRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::front_end::windowMatchingResponse> should match 
// service_traits::MD5Sum< ::front_end::windowMatching > 
template<>
struct MD5Sum< ::front_end::windowMatchingResponse>
{
  static const char* value()
  {
    return MD5Sum< ::front_end::windowMatching >::value();
  }
  static const char* value(const ::front_end::windowMatchingResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::front_end::windowMatchingResponse> should match 
// service_traits::DataType< ::front_end::windowMatching > 
template<>
struct DataType< ::front_end::windowMatchingResponse>
{
  static const char* value()
  {
    return DataType< ::front_end::windowMatching >::value();
  }
  static const char* value(const ::front_end::windowMatchingResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // FRONT_END_MESSAGE_WINDOWMATCHING_H
