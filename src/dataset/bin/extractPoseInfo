#!/usr/bin/env python

from bumblebee.motion import *

from simulation.path import *
from simulation.settings import *
import tf.transformations
from geometry_msgs.msg import TransformStamped,Transform,Quaternion,Vector3
from bumblebee.baseTypes import basicGraph,slidingGraph
from simulation.dataset import stereo_simulator_node
import pickle
import os
import rospy

import time
import scipy.stats.mstats as stat
from scipy.stats import norm,cauchy
import matplotlib.pyplot as plt
import matplotlib.style as sty
from mpl_toolkits.mplot3d import Axes3D
sty.use("seaborn")

from tf import TransformListener,TransformBroadcaster
from tf.transformations import *
import numpy as np


out="/home/ryan/recording/poseGraph/ORB/summary"
inNet="/home/ryan/recording/poseGraph/ORB"
#["5000_A1","5000_A2","5000_A3",
replayFiles=["5000_A5","5000_A6","5000_A12","5000_A13","5000_A14"]#,"/media/ryan/EXTRA/Simulation/50/G_0.3.gauss"]#,"/home/ryan/recording/poseGraph/5000_A2_full.pose"]

rospy.init_node("graph_poses_extract")


for f in replayFiles:
    print("new SLiding Graph")
    inlierData=[]
    rmsData=[]
    inlierRatio=[]
    inFile=inNet+"/"+f+".pose"
    with open(inFile,"r") as fread:
            print(f)
            data=pickle.load(fread)
            print("Loaded")
            with open(out+"/"+f+".inlier",'w') as outFIle:
                pickle.dump(data.getInlierMotion(),outFIle)
            print("1")
            with open(out+"/"+f+".inlierRMS",'w') as outFIle:
                pickle.dump(data.getInlierRMS(),outFIle)
            print("extracted2")
            with open(out+"/"+f+".tracks",'w') as outFIle:
                pickle.dump(data.getTotalTracks(),outFIle)
            print("extracted3")
            with open(out+"/"+f+".delta",'w') as outFIle:
                pickle.dump(data.getDeltaMotion(),outFIle)
            print("extracted4")
            # pickle.data.getInlierMotion())
            # print("inlier")
            # rmsData.append(data.getInlierRMS())
            # print("rms")
            # inlierRatio.append(data.getTotalTracks())
            # print("totalTrc")